<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--  1引入外部配置文件  -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--  2配置数据源  -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="2"/>
    </bean>
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">-->
    <!--    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
    <!--    <property name="url" value="jdbc:mysql://localhost:3306/o2o?useUnicode=true&amp;characterEncoding=utf-8"/>-->
    <!--    <property name="username" value="root"/>-->
    <!--    <property name="password" value="110110110"/>-->
    <!--    &lt;!&ndash;最大连接&ndash;&gt;-->
    <!--    <property name="maxActive" value="10"/>-->
    <!--    &lt;!&ndash;最小空闲数&ndash;&gt;-->
    <!--    <property name="maxIdle" value="5"/>-->
    <!--</bean>-->
    <!--  3、让spring管理sqlsessionFactory  -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatisConfig.xml"/>
        <!--<property name="typeAliasesPackage" value="club.bagedate.o2o.entity"/>-->
        <!--<property name="mapperLocations" value="classpath:club/bagedate/o2o/mapper/*Mapper.xml"/>-->
    </bean>
    <!--  4、配置mapper扫描器，批量扫描创建代理对象  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="club.bagedate.o2o.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
    </bean>
    <!--  自动扫描注解  -->
    <context:component-scan base-package="club.bagedate.o2o"/>
    <!--  5、配置事务管理  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--  6、开启事务注解  -->
    <tx:annotation-driven/>
</beans>