package club.bagedate.o2o.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LocalAuthExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public LocalAuthExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLocalidIsNull() {
            addCriterion("localId is null");
            return (Criteria) this;
        }

        public Criteria andLocalidIsNotNull() {
            addCriterion("localId is not null");
            return (Criteria) this;
        }

        public Criteria andLocalidEqualTo(Integer value) {
            addCriterion("localId =", value, "localid");
            return (Criteria) this;
        }

        public Criteria andLocalidNotEqualTo(Integer value) {
            addCriterion("localId <>", value, "localid");
            return (Criteria) this;
        }

        public Criteria andLocalidGreaterThan(Integer value) {
            addCriterion("localId >", value, "localid");
            return (Criteria) this;
        }

        public Criteria andLocalidGreaterThanOrEqualTo(Integer value) {
            addCriterion("localId >=", value, "localid");
            return (Criteria) this;
        }

        public Criteria andLocalidLessThan(Integer value) {
            addCriterion("localId <", value, "localid");
            return (Criteria) this;
        }

        public Criteria andLocalidLessThanOrEqualTo(Integer value) {
            addCriterion("localId <=", value, "localid");
            return (Criteria) this;
        }

        public Criteria andLocalidIn(List<Integer> values) {
            addCriterion("localId in", values, "localid");
            return (Criteria) this;
        }

        public Criteria andLocalidNotIn(List<Integer> values) {
            addCriterion("localId not in", values, "localid");
            return (Criteria) this;
        }

        public Criteria andLocalidBetween(Integer value1, Integer value2) {
            addCriterion("localId between", value1, value2, "localid");
            return (Criteria) this;
        }

        public Criteria andLocalidNotBetween(Integer value1, Integer value2) {
            addCriterion("localId not between", value1, value2, "localid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userId =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userId >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userId <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userId in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andLocalusernameIsNull() {
            addCriterion("localUserName is null");
            return (Criteria) this;
        }

        public Criteria andLocalusernameIsNotNull() {
            addCriterion("localUserName is not null");
            return (Criteria) this;
        }

        public Criteria andLocalusernameEqualTo(String value) {
            addCriterion("localUserName =", value, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameNotEqualTo(String value) {
            addCriterion("localUserName <>", value, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameGreaterThan(String value) {
            addCriterion("localUserName >", value, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameGreaterThanOrEqualTo(String value) {
            addCriterion("localUserName >=", value, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameLessThan(String value) {
            addCriterion("localUserName <", value, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameLessThanOrEqualTo(String value) {
            addCriterion("localUserName <=", value, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameLike(String value) {
            addCriterion("localUserName like", value, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameNotLike(String value) {
            addCriterion("localUserName not like", value, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameIn(List<String> values) {
            addCriterion("localUserName in", values, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameNotIn(List<String> values) {
            addCriterion("localUserName not in", values, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameBetween(String value1, String value2) {
            addCriterion("localUserName between", value1, value2, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalusernameNotBetween(String value1, String value2) {
            addCriterion("localUserName not between", value1, value2, "localusername");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordIsNull() {
            addCriterion("localPassword is null");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordIsNotNull() {
            addCriterion("localPassword is not null");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordEqualTo(String value) {
            addCriterion("localPassword =", value, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordNotEqualTo(String value) {
            addCriterion("localPassword <>", value, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordGreaterThan(String value) {
            addCriterion("localPassword >", value, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordGreaterThanOrEqualTo(String value) {
            addCriterion("localPassword >=", value, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordLessThan(String value) {
            addCriterion("localPassword <", value, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordLessThanOrEqualTo(String value) {
            addCriterion("localPassword <=", value, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordLike(String value) {
            addCriterion("localPassword like", value, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordNotLike(String value) {
            addCriterion("localPassword not like", value, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordIn(List<String> values) {
            addCriterion("localPassword in", values, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordNotIn(List<String> values) {
            addCriterion("localPassword not in", values, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordBetween(String value1, String value2) {
            addCriterion("localPassword between", value1, value2, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalpasswordNotBetween(String value1, String value2) {
            addCriterion("localPassword not between", value1, value2, "localpassword");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeIsNull() {
            addCriterion("localIdCreateTime is null");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeIsNotNull() {
            addCriterion("localIdCreateTime is not null");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeEqualTo(Date value) {
            addCriterion("localIdCreateTime =", value, "localidcreatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeNotEqualTo(Date value) {
            addCriterion("localIdCreateTime <>", value, "localidcreatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeGreaterThan(Date value) {
            addCriterion("localIdCreateTime >", value, "localidcreatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("localIdCreateTime >=", value, "localidcreatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeLessThan(Date value) {
            addCriterion("localIdCreateTime <", value, "localidcreatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("localIdCreateTime <=", value, "localidcreatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeIn(List<Date> values) {
            addCriterion("localIdCreateTime in", values, "localidcreatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeNotIn(List<Date> values) {
            addCriterion("localIdCreateTime not in", values, "localidcreatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeBetween(Date value1, Date value2) {
            addCriterion("localIdCreateTime between", value1, value2, "localidcreatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidcreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("localIdCreateTime not between", value1, value2, "localidcreatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeIsNull() {
            addCriterion("localIdUpdateTime is null");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeIsNotNull() {
            addCriterion("localIdUpdateTime is not null");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeEqualTo(Date value) {
            addCriterion("localIdUpdateTime =", value, "localidupdatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeNotEqualTo(Date value) {
            addCriterion("localIdUpdateTime <>", value, "localidupdatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeGreaterThan(Date value) {
            addCriterion("localIdUpdateTime >", value, "localidupdatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("localIdUpdateTime >=", value, "localidupdatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeLessThan(Date value) {
            addCriterion("localIdUpdateTime <", value, "localidupdatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeLessThanOrEqualTo(Date value) {
            addCriterion("localIdUpdateTime <=", value, "localidupdatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeIn(List<Date> values) {
            addCriterion("localIdUpdateTime in", values, "localidupdatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeNotIn(List<Date> values) {
            addCriterion("localIdUpdateTime not in", values, "localidupdatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeBetween(Date value1, Date value2) {
            addCriterion("localIdUpdateTime between", value1, value2, "localidupdatetime");
            return (Criteria) this;
        }

        public Criteria andLocalidupdatetimeNotBetween(Date value1, Date value2) {
            addCriterion("localIdUpdateTime not between", value1, value2, "localidupdatetime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table localauth
     *
     * @mbg.generated do_not_delete_during_merge Tue May 14 10:43:09 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table localauth
     *
     * @mbg.generated Tue May 14 10:43:09 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}